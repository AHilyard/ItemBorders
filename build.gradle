buildscript {
	repositories {
		maven { url = 'https://files.minecraftforge.net/maven' }
		maven { url = "https://repo.spongepowered.org/maven" }
		mavenCentral()
	}
	dependencies {
		classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
		classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
	}
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'eclipse'

archivesBaseName = project.name + '-' + project.mcVersion + '-forge'

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
	mappings channel: 'snapshot', version: '20180814-1.12'

	runs {
		client = {
			properties 'forge.logging.markers': ''
			properties 'forge.logging.console.level': 'debug'
			properties 'terminal.ansi': 'true'
			workingDirectory project.file('run').canonicalPath
			source sourceSets.main

			arg "-mixin.debug=true"
			arg "-mixin.checks.interfaces=true"
			arg "-mixin.config=${project.name}.mixins.json".toLowerCase()

			mods {
				itemborders {
					source sourceSets.main
				}
			}
		}
	}
}

configurations {
	jarLibs
	implementation.extendsFrom jarLibs
}

repositories {
	maven {
		name = "CurseMaven"
		url = "https://www.cursemaven.com"
	}
	maven {
		name = "Mixin"
		url = 'https://repo.spongepowered.org/repository/maven-public'
	}
}

dependencies {
	minecraft "net.minecraftforge:forge:${project.mcVersion}-${project.forgeVersion}"

	jarLibs "org.spongepowered:mixin:0.8.3"
	annotationProcessor 'org.spongepowered:mixin:0.8.3:processor'
	compileClasspath fg.deobf("curse.maven:legendarytooltips-532127:4499615")
}

mixin {
	add sourceSets.main, "${project.name.toLowerCase()}.refmap.json"
}

processResources {
	duplicatesStrategy 'include'
	inputs.property "version", project.version
	inputs.property "mcVersion", project.mcVersion

	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'

		expand 'version': project.version, 'mcVersion': project.mcVersion
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude 'mcmod.info'
	}
}

jar {
	from({ configurations.jarLibs.collect { it.isDirectory() ? it : zipTree(it) } }) {
		exclude 'LICENSE.txt', 'META-INF/MANIFSET.MF', 'META-INF/maven/**', 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
	}

	manifest {
		attributes(["Specification-Title": project.name,
					"Specification-Vendor": project.author,
					"Specification-Version": project.version,
					"Implementation-Title": project.name,
					"Implementation-Version": project.version,
					"Implementation-Vendor" : project.author,
					"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
					"MixinConfigs": "${project.name.toLowerCase()}.mixins.json",
					"TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
					"FMLCorePluginContainsFMLMod": true,
					"FMLCorePlugin": "com.anthonyhilyard.itemborders.MixinLoader",
					"ForceLoadAsMod": true])
	}
}